// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Puppy_Project.Dbcontext;

#nullable disable

namespace Puppy_Project.Migrations
{
    [DbContext(typeof(PuppyDb))]
    [Migration("20240207083021_cartitem")]
    partial class cartitem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Puppy_Project.Depandancies.UserDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("user");

                    b.HasKey("Id");

                    b.ToTable("UsersTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.CartDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("CartTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.CartItemDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cart_id")
                        .HasColumnType("int");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cart_id");

                    b.HasIndex("Product_Id");

                    b.ToTable("CartItemTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.CategoryDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ctg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryTB");
                });

            modelBuilder.Entity("Puppy_Project.Models.OrderDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductDTOId")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductDTOId");

                    b.HasIndex("User_Id")
                        .IsUnique();

                    b.ToTable("OrderTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.OrderItemDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Order_Id");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItemTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.ProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category_id")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_id");

                    b.ToTable("ProductsTb");
                });

            modelBuilder.Entity("Puppy_Project.Models.CartDTO", b =>
                {
                    b.HasOne("Puppy_Project.Depandancies.UserDTO", "userid")
                        .WithOne("cartuser")
                        .HasForeignKey("Puppy_Project.Models.CartDTO", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userid");
                });

            modelBuilder.Entity("Puppy_Project.Models.CartItemDTO", b =>
                {
                    b.HasOne("Puppy_Project.Models.CartDTO", "cart")
                        .WithMany("cartItemDTOs")
                        .HasForeignKey("Cart_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Puppy_Project.Models.ProductDTO", "product")
                        .WithMany("cartItems")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Puppy_Project.Models.OrderDTO", b =>
                {
                    b.HasOne("Puppy_Project.Models.ProductDTO", null)
                        .WithMany("orderItems")
                        .HasForeignKey("ProductDTOId");

                    b.HasOne("Puppy_Project.Depandancies.UserDTO", "user")
                        .WithOne("userorder")
                        .HasForeignKey("Puppy_Project.Models.OrderDTO", "User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Puppy_Project.Models.OrderItemDTO", b =>
                {
                    b.HasOne("Puppy_Project.Models.OrderDTO", "order")
                        .WithMany("orderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Puppy_Project.Models.ProductDTO", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Puppy_Project.Models.ProductDTO", b =>
                {
                    b.HasOne("Puppy_Project.Models.CategoryDTO", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Puppy_Project.Depandancies.UserDTO", b =>
                {
                    b.Navigation("cartuser")
                        .IsRequired();

                    b.Navigation("userorder")
                        .IsRequired();
                });

            modelBuilder.Entity("Puppy_Project.Models.CartDTO", b =>
                {
                    b.Navigation("cartItemDTOs");
                });

            modelBuilder.Entity("Puppy_Project.Models.CategoryDTO", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Puppy_Project.Models.OrderDTO", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("Puppy_Project.Models.ProductDTO", b =>
                {
                    b.Navigation("cartItems");

                    b.Navigation("orderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
